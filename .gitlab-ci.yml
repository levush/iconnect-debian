stages:
  - test
  - build
  - publish

variables:
  ANSIBLE_HOST_KEY_CHECKING: "False"
  HCLOUD_VM_NAME: iconnect-kernel-compile
  HCLOUD_VM_TYPE: ccx31
  HCLOUD_VM_LOCATION: nbg1
  HCLOUD_VM_SSH_KEY_NAME: gitlab-ci
  HCLOUD_VM_IMAGE: debian-10
  HCLOUD_CACHE_VOLUME_NAME: iconnect-kernel-cache
  # HCLOUD_TOKEN: secret
  # SSH_PRIVATE_KEY: secret
  # HCLOUD_CACHE_VOLUME_ID: secret
  # RSYNC_MODULE: secret

check:
  stage: test
  image: lu1as/hcloud
  script:
    - ansible-playbook cloud_build/main.yml --syntax-check
    - cp config.vars.sample config.vars
    - ./run.sh help

.hcloud: &hcloud
  before_script:
    - hcloud server create --name "$HCLOUD_VM_NAME" --location "$HCLOUD_VM_LOCATION" --ssh-key "$HCLOUD_VM_SSH_KEY_NAME" --type "$HCLOUD_VM_TYPE" --image "$HCLOUD_VM_IMAGE"
    - hcloud volume attach "$HCLOUD_CACHE_VOLUME_NAME" --server "$HCLOUD_VM_NAME"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  after_script:
    - hcloud server poweroff "$HCLOUD_VM_NAME" || true
    - hcloud volume detach "$HCLOUD_CACHE_VOLUME_NAME" || true
    - hcloud server delete "$HCLOUD_VM_NAME"

build:
  stage: build
  image: lu1as/hcloud
  <<: *hcloud
  variables:
    CLEAR_FILESYSTEM_CACHE: "false"
  script:
    - ansible-playbook cloud_build/main.yml
  artifacts:
    name: ${CI_PROJECT_NAME}-image-${CI_COMMIT_REF_NAME}
    paths:
      - "*.raw"
      - kernel-pkgs/*.deb
    expire_in: 90 days
  only:
    - master
    - tags
  when: manual
  allow_failure: false

publish:deb:
  stage: publish
  image: lu1as/hcloud
  script:
    - rsync kernel-pkgs/*.deb $RSYNC_MODULE
  dependencies:
    - build
  only:
    - master
    - tags
  when: manual
  allow_failure: false
